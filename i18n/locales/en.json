{
  "flag.protocol.description": "Protocol that will be proxied: tcp, udp, all (both tcp and udp) (default: tcp)",
  "flag.listen.description": "Address the proxy listens on",
  "flag.target4.description": "Address to which IPv4 traffic will be forwarded to",
  "flag.target6.description": "Address to which IPv6 traffic will be forwarded to",
  "flag.mark.description": "The mark that will be set on outbound packets (default: 0)",
  "flag.verbose.description": "Verbosity level (default: 0):\n0 - no logging of individual connections\n1 - log errors occurring in individual connections\n2 - log all state changes of individual connections",
  "flag.allowed_subnets.description": "Path to a file that contains allowed subnets of the proxy servers",
  "flag.listeners.description": "Number of listener sockets that will be opened for the listen address (Linux 3.9+) (default: 1)",
  "flag.close_after.description": "Number of seconds after which UDP socket will be cleaned up (default: 60)",
  
  "error.protocol.invalid": "--protocol has to be one of tcp, udp, all",
  "error.mark.invalid": "--mark has to be >= 0",
  "error.verbose.invalid": "-v has to be >= 0",
  "error.listeners.invalid": "--listeners has to be >= 1",
  "error.listen_addr.malformed": "listen address is malformed",
  "error.target4_addr.malformed": "ipv4 target address is malformed",
  "error.target4_addr.not_ipv4": "ipv4 target address is not IPv4",
  "error.target6_addr.malformed": "ipv6 target address is malformed",
  "error.target6_addr.not_ipv6": "ipv6 target address is not IPv6",
  "error.target6_addr.not_configured": "ipv6 target address is not configured but required for IPv6 traffic",
  "error.close_after.invalid": "--close-after has to be >= 0",
  "error.privilege_check.failed": "privilege check failed",
  "error.routing_rules.setup_failed": "failed to setup routing rules",
  "error.routing_rules.permission": "make sure to run as root or with CAP_NET_ADMIN capability",
  "error.allowed_subnets.load_failed": "failed to load allowed subnets file",
  
  "log.allowed_subnet": "allowed subnet",
  "log.shutdown_signal": "received shutdown signal, cleaning up...",
  "log.routing_rules.setup": "setting up routing rules for transparent proxy",
  "log.routing_rules.setup_success": "routing rules set up successfully",
  "log.routing_rules.cleanup": "cleaning up routing rules",
  "log.routing_rules.cleanup_success": "routing rules cleanup completed",
  "log.routing_rules.ipv4_rule_failed": "failed to add IPv4 rule (may already exist)",
  "log.routing_rules.ipv4_route_failed": "failed to add IPv4 route (may already exist)",
  "log.routing_rules.ipv6_rule_failed": "failed to add IPv6 rule (may already exist)",
  "log.routing_rules.ipv6_route_failed": "failed to add IPv6 route (may already exist)",
  "log.routing_rules.ipv4_rule_remove_failed": "failed to remove IPv4 rule (may not exist)",
  "log.routing_rules.ipv4_route_remove_failed": "failed to remove IPv4 route (may not exist)",
  "log.routing_rules.ipv6_rule_remove_failed": "failed to remove IPv6 rule (may not exist)",
  "log.routing_rules.ipv6_route_remove_failed": "failed to remove IPv6 route (may not exist)",
  
  "log.tcp.listening": "listening",
  "log.tcp.bind_failed": "failed to bind listener",
  "log.tcp.accept_failed": "failed to accept new connection",
  "log.tcp.connection_origin_not_allowed": "connection origin not in allowed subnets",
  "log.tcp.new_connection": "new connection",
  "log.tcp.proxy_header_read_failed": "failed to read PROXY header",
  "log.tcp.proxy_header_parse_failed": "failed to parse PROXY header",
  "log.tcp.proxy_header_parsed": "successfully parsed PROXY header",
  "log.tcp.upstream_connection_failed": "failed to establish upstream connection",
  "log.tcp.upstream_connection_success": "successfully established upstream connection",
  "log.tcp.nodelay_downstream_failed": "failed to set nodelay on downstream connection",
  "log.tcp.nodelay_downstream_success": "successfully set NoDelay on downstream connection",
  "log.tcp.nodelay_upstream_failed": "failed to set nodelay on upstream connection",
  "log.tcp.nodelay_upstream_success": "successfully set NoDelay on upstream connection",
  "log.tcp.upstream_write_failed": "failed to write data to upstream connection",
  "log.tcp.connection_broken": "connection broken",
  "log.tcp.connection_closing": "connection closing",
  
  "log.udp.listening": "listening",
  "log.udp.bind_failed": "failed to bind listener",
  "log.udp.read_failed": "failed to read from socket",
  "log.udp.packet_origin_not_allowed": "packet origin not in allowed subnets",
  "log.udp.proxy_header_parse_failed": "failed to parse PROXY header",
  "log.udp.new_connection": "new connection",
  "log.udp.upstream_connect_failed": "failed to connect to upstream",
  "log.udp.upstream_write_failed": "failed to write to upstream socket",
  "log.udp.upstream_read_failed": "failed to read from upstream",
  "log.udp.upstream_raw_connection_failed": "failed to retrieve raw connection from upstream socket",
  
  "log.so_reuseport_failed": "failed to set SO_REUSEPORT - only one listener setup will succeed",
  "log.tcp_listener_starting": "starting TCP listener",
  "log.udp_listener_starting": "starting UDP listener",
  "log.tcp_listener_panicked": "TCP listener panicked",
  "log.udp_listener_panicked": "UDP listener panicked",
  "log.tcp_listener_failed": "TCP listener failed, continuing with UDP only",
  "log.udp_listener_failed": "UDP listener failed, continuing with TCP only",
  "log.both_listeners_failed": "both TCP and UDP listeners failed",
  
  "error.insufficient_privileges": "insufficient privileges to execute ip commands. Please run as root or with CAP_NET_ADMIN capability",
  "error.command_failed": "command '%s %v' failed: %w, output: %s"
}