name: Build Multi-Architecture Binaries

# 触发条件：标签推送、手动触发
on:
  push:
    tags: [ '*' ]
  workflow_dispatch:

jobs:
  # 推送 GitHub Release
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    strategy:
      matrix:
        include:
          # AMD64 微架构变体
          - goos: linux
            goarch: amd64
            goamd64: v1
            name: go-mmproxy-linux-amd64-v1
          - goos: linux
            goarch: amd64
            goamd64: v2
            name: go-mmproxy-linux-amd64-v2
          - goos: linux
            goarch: amd64
            goamd64: v3
            name: go-mmproxy-linux-amd64-v3
          - goos: linux
            goarch: amd64
            goamd64: v4
            name: go-mmproxy-linux-amd64-v4
          
          # ARM 架构变体
          - goos: linux
            goarch: arm64
            name: go-mmproxy-linux-arm64
          - goos: linux
            goarch: arm
            goarm: 5
            name: go-mmproxy-linux-armv5
          - goos: linux
            goarch: arm
            goarm: 6
            name: go-mmproxy-linux-armv6
          - goos: linux
            goarch: arm
            goarm: 7
            name: go-mmproxy-linux-armv7
          
          # 其他架构
          - goos: linux
            goarch: 386
            name: go-mmproxy-linux-386
          - goos: linux
            goarch: ppc64
            name: go-mmproxy-linux-ppc64
          - goos: linux
            goarch: ppc64le
            name: go-mmproxy-linux-ppc64le
          - goos: linux
            goarch: mips
            name: go-mmproxy-linux-mips
          - goos: linux
            goarch: mipsle
            name: go-mmproxy-linux-mipsle
          - goos: linux
            goarch: mips64
            name: go-mmproxy-linux-mips64
          - goos: linux
            goarch: mips64le
            name: go-mmproxy-linux-mips64le
          - goos: linux
            goarch: riscv64
            name: go-mmproxy-linux-riscv64
          - goos: linux
            goarch: s390x
            name: go-mmproxy-linux-s390x
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25.1'
        cache: false
    
    - name: Get version and build info
      id: version
      run: |
        VERSION=$(git describe --tags 2>/dev/null || echo "unknown")
        BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT
    
    - name: Build binary
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOAMD64: ${{ matrix.goamd64 }}
        GOARM: ${{ matrix.goarm }}
      run: |
        LDFLAGS="-s -w -X main.version=${{ steps.version.outputs.version }} -X main.buildDate=${{ steps.version.outputs.build_date }}"
        
        echo "Building ${{ matrix.goos }}/${{ matrix.goarch }} -> ${{ matrix.name }}"
        go build -ldflags="$LDFLAGS" -o "${{ matrix.name }}"
        
        if [ -f "${{ matrix.name }}" ]; then
          echo "✅ Successfully built ${{ matrix.name }}"
          ls -la "${{ matrix.name }}"
        else
          echo "❌ Failed to build ${{ matrix.name }}"
          exit 1
        fi
    
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ github.ref_name }}
        files: ${{ matrix.name }}
        body: |
          Latest build for the current [commit](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}